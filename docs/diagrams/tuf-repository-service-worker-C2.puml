@startuml General View (Container level)
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

!define osaPuml https://raw.githubusercontent.com/Crashedmind/PlantUML-opensecurityarchitecture2-icons/master
!include osaPuml/Common.puml
!include osaPuml/User/all.puml

!include <office/Servers/file_server>
!include <office/Servers/application_server>
!include <office/Services/web_services>
!include <office/Concepts/application_generic>
!include <office/Concepts/service_application>
!include <office/Servers/web_server>
!include <office/Communications/queue_viewer>
!include <office/Devices/management_console>
!include <logos/terminal>
!include <office/Security/lock_with_key_security>
!include <office/Concepts/download>
!include <cloudinsight/redis>

!include <azure/AzureCommon>
!include <azure/Storage/AzureBlobStorage>
!include <azure/Security/AzureKeyVault>

!include <awslib/AWSCommon>
!include <awslib/SecurityIdentityAndCompliance/KeyManagementService>
!include <awslib/Storage/S3Bucket>

sprite $trs [125x125/16z] {
xPY7Ol8miaQ_QMfMUV-tlOmT8kFW07_BtLrEUYHyD1fLy9Tvy-RDcpTlthnvy-RD6n8DCUMSOb0c_4FOyhWX6-FVeEMYwxMsxjxUQktkL_nzh8xHwkQjotBz
hOrH_xPUbZ5SD9894m4W5al36pJ68lXxKBn8BkeaT2ZGl9N4FoWJYwdaajCwfBbk0iOU8ZYyDMpXFpIaozZJKX-jZypO8oeg7_eoUXj3yDj8Tf-FQAUtDT6N
BpjqjuYmA6F5nlW3TYbk7ivIBhZPExKnRd1pK1ObhCYq_-wuwkcwU15BA6CKmZ5mYwQcmjYWnUsCN-KwheeUL2mumCeX6BE8O6-lX9UPNTT74Jp4vUhUdHpK
BlQ4NqFdk7e8gGW9YGhZ4_Onhx_excrKnYcSbiJuG2wONA2RHxJH2AyZxixqZNiuLpi9UzZCs9Ckze2N8U_pZ7CyesqN63C89CUdz3u8hv8lxe8DbWiCV0bg
x4UK4A0u44PzFNJrHzFdkdb11NlCqwcNhpaYbTp_9VHHwHSwNR32Aco1MHbV1hBwNEHf1-w5BdW96tL4R8Xe36egWa-eZhPMY8yM4lQAhmO-nucoHXCMrYbn
vm9dURIGbF5Ylzj-cEWwXo0ovREt7oyaORJNLlYo2zojp4mgSaZuiI4Jsirt6VMbLOvlkf95M9LtassPUPmfs24geifOeHUJRhUDbMsUozvMCQc7ntjTzSzh
ySXu7by_29-G00IXatu-ffrL90GLaUjoDHOypp96EMxVmdkLOO_TD4T4Kn0nKVe8PLGymLcMX6Ud5nyGTxggJBa4KtokIcdqJY-DDyCDSfFmHdSscRaeNM26
pCXVs5jE9ySnuITfPtVhF51vjxycbs_MVCDNRByHyNQku2d77v3l4twUTX9YPfAvlXRyGhSJ4VQ4GyAFQG_Nq36tTkhzbLCaVyX9L5LutwhM3drolr1eRg_y
sacAjkgamkjQTPxmyxJFL-bhQplvrVVZ0cGyDxFyu5ItB-UJvV8nViF-k039F4I46TatKo7SEKUzCjw2xnHCoZOlG8U4FqZxyUXUSf1dt-rOLs-Q5w3Ji2Qd
dPDzLNAMn_gmtael66ulG64cz47Q0_RJD0t77_f4qxrMpJaSBq1vz97ZIc0SuH1NrbghMdHhDgLyeRf-sizNxYoV2vN8vmKeUj4L-PBiAzqtc3lJLFAZinxr
cxnkMjdTpFhAF3NjpbLzvNfxKs6Tq_J1P9d7fuI9CA1p9FQsqkSMkPjEry8Yss4cH1MxMH_JgCDmIZu-LbXevrXPTtIwS_gW5JWi789-JjFPn8mJZbl0-GNe
AgU5zklnX4LK13JbvqUQrxQ0AGyztfUJYdnSs0-BFtydj-Vbb99_tfFFQOedv3Drpyf3hWR0QWu7-Poc98p972ndH-RwhBmADgJHbDzEKnBigTyUuCFSUX_A
2rO8AFVa40OfzkYyVPubVV2JSi85xeJbhXp2UdZuQSfdLeO-8tUbWhk05joLGmvnFnfHrDnUJBvZkmGKnXAh0EpoFf8ul8ss7Go0rSfu_9OSTzzz7j1T7WoK
1O35xOsC3LqZs6EmZpsrCxw7qlgM-dTiQpjNR2oyhUtL6HcGiTJ9ACXZVRC-4HuYwQd84GES4E7oVUJr4BdwZoHu2c8vHxUSkqC1Q2NCdEinvzj_M9ZmHvZB
QpLOdSlhFs3AGRbcme_87GD-Jex_VlbR_fOBxP5_Ap_IXk6V8ADzPJ3-LUXV2VXNi8LRZF7VpnlwGozHXzW8_gKNFluhE8Lwm2bY9lX2QdVir5fldKDds13g
hNajwgtsY5DCG9Ln3-sbrNjDmZsa6-1oxOos6Qa5v4QmfHguM2uCIZKBA9Kgb9LohGOjDG3PGWg5a1A0s0JabOl0efRWFnUs18JI359gf9rSF-NKikagJreJ
j9jsuPwjHwIckSEwAL4FTD4ozsZTiBHgqcLBXlPgGEeIlNADt29AGUhG7aoeH-dXAATLNfUQNLvhhuJOKkh6NL4ohurXxZN0DTO9rXarKIu4rA2TSK5oJrIM
M3fR5o0MDwHAqHEgFQUUZtBnw6bsktP5wCP2tEqYfvfM6OSUNBxrbRYyP01MrnyW83NEHLZM-f1s4ICj5pcxBOZ8RSwvjz8pgATDxjtiOIPBn7qfgosr1PP2
Do-slXYr9NL5Mm1mxOeBfQNkpGmM4LoEqYEGEwIN4gXMYrFEGTRlqGWK58x_vFKh1d0F5WXGhy4nsbfC8OgN2s2scqpY3_BAKI61rlymeEQ_10PPZ8odyPm_
nBE15_YZSksHVd0nVVFcpPitR_uF
}


AddContainerTag("webui", $sprite="application_server", $legendText="Web UI Interface", $bgColor=Gray)
AddContainerTag("key_service", $sprite="lock_with_key_security", $legendText="Key Service", $bgColor=Gray)
AddContainerTag("storage_service", $sprite="file_server", $legendText="Storage Service", $bgColor=Gray)
AddContainerTag("tuf_repository_service_worker", $sprite="trs", $legendText="Repository Metadata Worker")
AddContainerTag("queue", $sprite="queue_viewer", $legendText="Message Queue")
AddContainerTag("ci_cd", $sprite="application_generic", $legendText="CI/CD, Artfact Management, etc")
AddContainerTag("metadata_web", $sprite="web_services", $legendText="Web exposed TUF Metadata")
AddContainerTag("download_target", $sprite="download", $legendText="Download file/target/package", $bgColor=Gray)
AddContainerTag("terminal", $sprite="terminal,scale=0.5,color=#000000", $legendText="CLI")
AddContainerTag("redis", $sprite="redis", $legendText="CLI")
AddContainerTag("aws_s3", $sprite="S3Bucket", $legendText="Storage")
AddContainerTag("aws_kms", $sprite="KeyManagementService", $legendText="KeyVault")
AddContainerTag("azure_blob", $sprite="AzureBlobStorage", $legendText="Storge")
AddContainerTag("azure_kv", $sprite="AzureKeyVault", $legendText="KeyVault")

AddRelTag("terminal", $textColor="$ARROW_COLOR", $lineColor="$ARROW_COLOR", $sprite="terminal,scale=0.75,color=#000000", $legendText="TUF Repository Service CLI")
AddRelTag("bowser", $textColor="$ARROW_COLOR", $lineColor="$ARROW_COLOR", $sprite="management_console,scale=0.5", $legendText="Browser")
AddRelTag("download", $textColor="Green", $lineColor="$ARROW_COLOR")
AddRelTag("share", $textColor="orange", $lineColor="grey", $lineStyle = DashedLine())

Container(tuf_repository_service_worker, "TUF-REPOSITORY-SERVICE-WORKER", "Metadata Repository Worker", $tags="tuf_repository_service_worker")
ContainerDb(data_dir, "/$DATA_DIR", "File System", "Service settings\nRepository Settings", $tags="storage_service")
Container_Ext(broker, "Broker/Backend", "RabbitMQ, Redis, etc", $tags="queue") #Grey
Container_Ext(redis, "Redis", "Redis Server", $tags="redis") #Grey
Container_Boundary(repository_storage, "Storage Service"){
    Container_Ext(stg_fs, "Filesystem", "Storage", $tags="storage_service") #Grey
    Container_Ext(aws_s3, "AWS S3", "Storage", $tags="aws_s3") #Grey
    Container_Ext(azure_blob, "Azure Blob", "Storage", $tags="azure_blob") #Grey
}
Container_Boundary(key_storage, "Key Vault Service"){
    Container_Ext(key_fs, "Filesystem", "Storage", $tags="storage_service") #Grey
    Container_Ext(aws_kms, "AWS KMS", "Storage", $tags="aws_kms") #Grey
    Container_Ext(azure_kv, "Azure Key Vault", "Storage", $tags="azure_kv") #Grey
}
Rel_D(broker, tuf_repository_service_worker, "Consumer", "Tasks")
Rel_U(tuf_repository_service_worker, broker, "Publisher", "Tasks")
Rel_U(tuf_repository_service_worker, redis, "Repository Configuration", "Consumer")
Rel_R(tuf_repository_service_worker, data_dir, "Write/Read", "Config settings")
Rel_D(tuf_repository_service_worker, repository_storage, "Write/Read", "TUF Metadata")
Rel_D(tuf_repository_service_worker, key_storage, "Write/Read", "Online Keys")



HIDE_STEREOTYPE()
@enduml